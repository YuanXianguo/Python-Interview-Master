"""
茉莉有2n匹马，每匹马都有一个速度v，现在茉莉将马分为两个队伍，每个队伍各有n匹马，两个队之间进行n场比赛，每场比赛两队各派出一匹马参赛，每匹马都恰好出场一次。茉莉想知道是否存在一种分配队伍的方法使得无论怎么安排比赛，第一个队伍都一定能获的全胜，两匹马若速度一样，那么速度快的获胜，若速度一样，则都有可能获胜。


输入描述:
第一行一个数T(T<=100)，表示数据组数。

对于每组数据，第一行一个整数n , (1<=n<=100)

接下来一行，2*n个整数，第i个整数vi表示第i匹马的速度, (1
<= vi <= 1000)

输出描述:
对于每组数据，输出一行，若存在一种分配方法使得第一个队伍全胜输出YES，否则输出NO

输入例子1:
2
2
1 2 3 4
1
1 1

输出例子1:
YES
NO
"""

t = int(input())
while t:
    n = int(input())
    vs = input().split()
    vs = list(map(int, vs))
    vs.sort()
    if vs[n-1] == vs[n]:
        print("NO")
    else:
        print("YES")
    t -= 1
